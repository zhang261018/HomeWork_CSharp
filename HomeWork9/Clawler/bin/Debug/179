<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="一、连接参数 文中已经说过，MySQL支持socket和TCP/IP两种连接方式。 [root@cs mysql]# mysql -uroot -p -S /tmp/mysql.sock Enter " />
    <meta property="og:description" content="一、连接参数 文中已经说过，MySQL支持socket和TCP/IP两种连接方式。 [root@cs mysql]# mysql -uroot -p -S /tmp/mysql.sock Enter " />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>MySQL - 连接管理 - 讷言敏行~ - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/simplememory/bundle-simplememory.min.css?v=uknaX_hejnSu-njQgx4Hj1R0JiPLwUhFPUlwWNmWyB4" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/yj0405/custom.css?v=JO8K&#x2B;N13owVV2ju2dFPB74&#x2B;WoEg=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/yj0405/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/yj0405/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/yj0405/wlwmanifest.xml" />
    <script>
        var currentBlogId = 647209;
        var currentBlogApp = 'yj0405';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleMemory';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-05-10 05:52';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile formobile">
            <a href="https://developer.aliyun.com/learning/trainingcamp/realtime/1?utm_content=g_1000268661" target="_blank" onclick="ga('send', 'event', 'Link', 'click', 'aliyun-realtime-blog-bannerbar-mobile')">
                <img src="https://img2020.cnblogs.com/blog/35695/202105/35695-20210509221214222-438425324.png" alt="" />
            </a>
        </div>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <script>loadPageBeginHtml();</script>
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/yj0405/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/yj0405/">讷言敏行</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/yj0405/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E8%AE%B7%E8%A8%80%E6%95%8F%E8%A1%8C~">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/yj0405/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/yj0405/p/14752004.html">
    <span>MySQL - 连接管理</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>&nbsp;</p>
<h2 id="连接参数">一、连接参数</h2>
<p>文中已经说过，MySQL支持socket和<code>TCP/IP</code>两种连接方式。</p>
<div class="cnblogs_code">
<pre>[root@cs mysql]# mysql -uroot -p -S /tmp/<span style="color: rgba(0, 0, 0, 1)">mysql.sock
Enter password:</span></pre>
</div>
<p><code>-S</code>指定socket来连接；一般我们不加<code>-S</code>就可以登录到MySQL中，是因为MySQL使用的socket文件默认的存放在<code>/tmp/mysql.sock</code>中，或者你在配置文件中指定，这样我们不指定也能找到socket文件。另外，一般使用socket登录都是本地登录，所以，你要保证你的登录用户是有<code>localhost</code>的权限的</p>
<p>而使用<code>TCP/IP</code>的方式就是：</p>
<p><span class="hljs-selector-attr">[root@cs mysql]# <span class="hljs-selector-tag">mysql <span class="hljs-selector-tag">-uroot <span class="hljs-selector-tag">-p <span class="hljs-selector-tag">-h192<span class="hljs-selector-class">.168<span class="hljs-selector-class">.85<span class="hljs-selector-class">.133 <span class="hljs-selector-tag">-P3306 <span class="ln-num" data-num="2"><span class="hljs-selector-tag">Enter <span class="hljs-selector-tag">password:</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="hljs-selector-attr">其他常用的参数：</span></p>
<p>&nbsp;<img src="https://img2020.cnblogs.com/blog/2217547/202105/2217547-20210510173622911-256379538.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>PS：</p>
<ul>
<li>参数和值之间可以挨着也可以空格分割。</li>
<li>如果<code>TCP/IP</code>和socket连接同时使用，默认<code>TCP/IP</code>方式优先</li>
</ul>
<div class="cnblogs_code">
<pre>[root@cs mysql]# mysql -uzhangkai -p -h <span style="color: rgba(128, 0, 128, 1)">192.168</span>.<span style="color: rgba(128, 0, 128, 1)">85.133</span> -P3306 -S /tmp/<span style="color: rgba(0, 0, 0, 1)">mysql.sock
Enter password: 
mysql</span>&gt;<span style="color: rgba(0, 0, 0, 1)"> show processlist;
</span>+----+----------+----------+------+---------+------+----------+------------------+
| Id | User     | Host     | db   | Command | Time | State    | Info             |
+----+----------+----------+------+---------+------+----------+------------------+
|  <span style="color: rgba(128, 0, 128, 1)">7</span> | zhangkai | cs:<span style="color: rgba(128, 0, 128, 1)">59128</span> | NULL | Query   |    <span style="color: rgba(128, 0, 128, 1)">0</span> | starting | show processlist |
+----+----------+----------+------+---------+------+----------+------------------+
<span style="color: rgba(128, 0, 128, 1)">1</span> row <span style="color: rgba(0, 0, 255, 1)">in</span> set (<span style="color: rgba(128, 0, 128, 1)">0.00</span> sec)</pre>
</div>
<p>在外部执行MySQL的内部命令，如shell脚本中，可以使用<code>-e</code>参数</p>
<div class="cnblogs_code">
<pre>[root@cs mysql]# mysql -uzhangkai -p123 -h <span style="color: rgba(128, 0, 128, 1)">192.168</span>.<span style="color: rgba(128, 0, 128, 1)">85.133</span> -P3306 -e <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">show processlist;</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
mysql: [Warning] Using a password on the command line interface can be insecure.
</span>+----+----------+----------+------+---------+------+----------+------------------+
| Id | User     | Host     | db   | Command | Time | State    | Info             |
+----+----------+----------+------+---------+------+----------+------------------+
|  <span style="color: rgba(128, 0, 128, 1)">8</span> | zhangkai | cs:<span style="color: rgba(128, 0, 128, 1)">59130</span> | NULL | Query   |    <span style="color: rgba(128, 0, 128, 1)">0</span> | starting | show processlist |
+----+----------+----------+------+---------+------+----------+------------------+</pre>
</div>
<p><code>-e</code>后跟双引号，引号内可以写想要执行的命令。</p>
<p>如果有一些SQL脚本要执行，可以使用<code>&lt;</code>符号来处理，首先准备一个<code>data.sql</code>文件，文件内容如下</p>
<div class="cnblogs_code">
<pre>create database data_test;</pre>
</div>
<p>然后导入到数据库中即可：</p>
<div class="cnblogs_code">
<pre>[root@cs home]# <span style="color: rgba(0, 0, 255, 1)">ls</span><span style="color: rgba(0, 0, 0, 1)">
data.sql
[root@cs home]# </span><span style="color: rgba(0, 0, 255, 1)">cat</span><span style="color: rgba(0, 0, 0, 1)"> data.sql 
create database data_test;
[root@cs home]# mysql </span>-uroot -p &lt;<span style="color: rgba(0, 0, 0, 1)">data.sql 
Enter password: 
[root@cs home]# mysql </span>-uroot -p -e<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">show databases;</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">
Enter password: 
</span>+--------------------+
| Database           |
+--------------------+
| information_schema |
| data_test          |
| mysql              |
| performance_schema |
| sys                |
+--------------------+</pre>
</div>
<p>&nbsp;</p>
<p>此时，我们可以查询到SQL脚本创建的<code>data_test</code>数据库了</p>
<p>&nbsp;</p>
<h2 id="多种启动方式">二、多种启动方式</h2>
<p><img src="https://img2020.cnblogs.com/blog/2217547/202105/2217547-20210510174244939-489835083.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>如上图，在centos6中，我们可以通过<code>service</code>来调用<code>mysql.server</code>脚本来启动MySQL，而<code>mysql.server</code>脚本内部会调用<code>mysqld_safe</code>脚本来调用<code>mysqld</code>这个启动程序脚本来 启动MySQL服务。<code>mysqld_safe</code>的作用是监控<code>mysqld</code>的运行状态。我们也可以通过<code>./bin/mysqld_safe &amp;</code>临时启动<code>mysqld_safe</code>来完成一些操作。</p>
<p>另外在centos7中，可以直接是使用<code>systemctl</code>来直接调用<code>mysqld</code>启动MySQL，而且centos7中也可以配置<code>service</code>的启动方式。</p>
<p>当然，无论是<code>systemctl</code>，还是<code>service</code>的启动方式，都是相对固定的<code>start</code>、<code>stop</code>这些操作，那有些情况下需要临时维护或者做其他的操作，就需要用到<code>mysqld_safe</code>模式或者直接启动<code>mysqld</code>了。</p>
<h2 id="初始化配置">三、初始化配置</h2>
<p>初始化配置的目的是：干预MySQL的启动，或者干预客户端的连接，说白了就是让MySQL按照我们的意愿来启动</p>
<p>初始化配置都有哪些方法</p>
<ol>
<li>预编译，这个方法可以pass掉了，因为我们一般都是下载二进制的源码包。</li>
<li>配置文件，也就是<code>/etc/my.cnf</code>文件，适用于所有的启动方式。</li>
<li>命令行，直接在命令行启动时添加各种参数，当然，这种参数仅限于<code>mysqld_safe、mysqld</code>这两种方式。</li>
</ol>
<p>综上所述，推荐使用配置文件的的方式来做数据库初始化启动。</p>
<p>先来看，MySQL在启动时，都(默认)读取了哪些配置文件</p>
<div class="cnblogs_code">
<pre>[root@cs ~]# mysqld --help --verbose | <span style="color: rgba(0, 0, 255, 1)">grep</span><span style="color: rgba(0, 0, 0, 1)"> my.cnf
</span>/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/<span style="color: rgba(0, 0, 0, 1)">.my.cnf 
                      my.cnf, $MYSQL_TCP_PORT, </span>/etc/services, built-<span style="color: rgba(0, 0, 255, 1)">in</span> default</pre>
</div>
<p>&nbsp;</p>
<p>如果多个配置文件有相同的参数，那就会以最后读取到的为准，也就是<code>~/.my.cnf</code>文件为准。但是如果启动时加入<code>--defaults=/etc/my.cnf</code>时，会以你<code>defaults</code>d的路径为准，其他的文件就不读取了</p>
<p>&nbsp;</p>
<p>配置文件的介绍</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 0, 1)">[标签]
配置项</span>=<span style="color: rgba(0, 0, 0, 1)">xxxx
# 标签的类型主要包括，服务端和客户端的定义
# 服务端包括以下几类：

[mysqld]
[mysqld_safe]
[server]   # 所有服务端的统称，不过不建议使用

# 客户端包括：
[mysql]
[mysqldump]   # 备份用
[client]

# 来个示例
[root@cs </span>~]# <span style="color: rgba(0, 0, 255, 1)">cat</span> /etc/<span style="color: rgba(0, 0, 0, 1)">my.cnf
[mysqld]
user</span>=<span style="color: rgba(0, 0, 0, 1)">mysql   # mysql工作时的用户
basedir</span>=/opt/<span style="color: rgba(0, 0, 0, 1)">mysql   # mysql所在的目录，必须设定的参数
datadir</span>=/data/<span style="color: rgba(0, 0, 0, 1)">mysql   # mysql数据存放的目录，必须设定的参数
server_id</span>=<span style="color: rgba(128, 0, 128, 1)">6</span><span style="color: rgba(0, 0, 0, 1)">
port</span>=<span style="color: rgba(128, 0, 128, 1)">3306</span><span style="color: rgba(0, 0, 0, 1)">
socket</span>=/tmp/<span style="color: rgba(0, 0, 0, 1)">mysql.sock   # 服务器端socket所在路径
log_error</span>=/data/mysql/<span style="color: rgba(0, 0, 0, 1)">mysql.log   # 错误日志
[mysql]
socket</span>=/tmp/<span style="color: rgba(0, 0, 0, 1)">mysql.sock   # 必须参数
# prompt</span>=<span style="color: rgba(128, 0, 128, 1)">3306</span> [\\d]&gt;<span style="color: rgba(0, 0, 0, 1)">   # 提示符
# user</span>=<span style="color: rgba(0, 0, 0, 1)">root   # 登录的用户名和密码，这里不建议用，不安全
# password</span>=<span style="color: rgba(128, 0, 128, 1)">123</span></pre>
</div>
<p>需要补充的是，带下划线的参数，如<code>server_id</code>，在MySQL5.5版本以前可以写成中横线的形式，但是中横线这种方式存在问题，所以后续版本都统一使用下划线这种连接方式(当然，为了兼容，也支持中横线的形式)。</p>
<p>另外，关于socket可能的报错，就是找不到socket文件，该报错的原因：</p>
<ul>
<li>数据库没启动，没启动没有生成socket文件。</li>
<li>启动时，指定的socket文件路径不对，也可能是配置文件中的路径写错了。</li>
</ul>
<p><code>server_id</code>参数，主从复制用，可以简单理解在MySQL5.7以后必加的一个参数，值是<code>1~65535</code>之间的任意数字，并且跟其他的实例区分开。</p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-05-10 17:52</span>&nbsp;
<a href="https://www.cnblogs.com/yj0405/">讷言敏行~</a>&nbsp;
阅读(<span id="post_view_count">3</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14752004" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14752004);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 647209, cb_blogApp = 'yj0405', cb_blogUserGuid = '17f01bdd-8495-48cc-2239-08d886dbd26e';
    var cb_entryId = 14752004, cb_entryCreatedDate = '2021-05-10 17:52', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 讷言敏行~
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        
<script type="text/javascript">
    // 生成目录索引列表
    // ref: http://www.cnblogs.com/wangqiguo/p/4355032.html
    // modified by: zzq
    function GenerateContentList() {
        var mainContent = $('#cnblogs_post_body');
        var h2_list = $('#cnblogs_post_body h2');//如果你的章节标题不是h2,只需要将这里的h2换掉即可

        if (mainContent.length < 1) 
            return;

        if (h2_list.length > 0) {
            var content = '<a name="_labelTop"></a>';
            content += '<div id="navCategory" style="color:#152e97;">';
            content += '<p style="font-size:18px;"><b>目录</b></p>';
            content += '<ul>';
            for (var i = 0; i < h2_list.length; i++) {
                var go_to_top = '<div style="text-align: right;"><a href="#_labelTop" style="color:#f68a33">回到顶部</a><a name="_label' + i + '"></a></div>';
                $(h2_list[i]).before(go_to_top);

                var h3_list = $(h2_list[i]).nextAll("h3");
                var li3_content = '';
                for (var j = 0; j < h3_list.length; j++) {
                    var tmp = $(h3_list[j]).prevAll('h2').first();
                    if (!tmp.is(h2_list[i]))
                        break;
                    var li3_anchor = '<a name="_label' + i + '_' + j + '"></a>';
                    $(h3_list[j]).before(li3_anchor);
                    li3_content += '<li><a href="#_label' + i + '_' + j + '">' + $(h3_list[j]).text() + '</a></li>';
                }

                var li2_content = '';
                if (li3_content.length > 0)
                    li2_content = '<li><a href="#_label' + i + '">' + $(h2_list[i]).text() + '</a><ul>' + li3_content + '</ul></li>';
                else
                    li2_content = '<li><a href="#_label' + i + '">' + $(h2_list[i]).text() + '</a></li>';
                content += li2_content;
            }
            content += '</ul>';
            content += '</div><p>&nbsp;</p>';
            content += '<hr style="height:1px;border:none;border-top:1px dashed #0066CC;"/>';
            if ($('#cnblogs_post_body').length != 0) {
                $($('#cnblogs_post_body')[0]).prepend(content);
            }
        }
    }

    GenerateContentList();

    var content = 'width=device-width, initial-scale=1 user-scalable=no';
    var viewport = document.createElement('meta');
    viewport.setAttribute('name', 'viewport');
    viewport.setAttribute('content', content);
    document.head.appendChild(viewport);
</script>





    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjuuzkIsKaRXKyjIN5PyT6lKLyMoaF6nzClDVlosvtypEwkna6pBkidyHyn6g-n19SYqRl6cMhVGWy5VlVsiwhzGpfA4560Dgu3YV8R-BVbmPj9tb49vEKRO13fY6ZNIhbY" />
</body>
</html>
