<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="如果你和老周一样，小时候特别喜欢搞破坏（什么电器都敢拆），那下面这样小喇叭你一定见过。 这种喇叭其实以前很多录音机都用，包括上小学时买来做英语听力的便携录音机。嗯，就是放录音带的那种，录音带也叫磁带或" />
    <meta property="og:description" content="如果你和老周一样，小时候特别喜欢搞破坏（什么电器都敢拆），那下面这样小喇叭你一定见过。 这种喇叭其实以前很多录音机都用，包括上小学时买来做英语听力的便携录音机。嗯，就是放录音带的那种，录音带也叫磁带或" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>【.NET 与树莓派】让喇叭播放音乐 - 东邪独孤 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/moonlightink/bundle-moonlightink.min.css?v=iVE30sZ6vb6blzqPWbGs2kM432fxmh8k3P9XllAp48s" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/moonlightink/bundle-moonlightink-mobile.min.css?v=axcwoS9UbqWFSKj9O2YcPP0sVreDAEIZDpcqOVKt8M4" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/tcjiaan/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/tcjiaan/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/tcjiaan/wlwmanifest.xml" />
    <script>
        var currentBlogId = 113198;
        var currentBlogApp = 'tcjiaan';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'MoonlightInk';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-02-10 12:54';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile formobile">
            <a href="https://developer.aliyun.com/learning/trainingcamp/realtime/1?utm_content=g_1000268661" target="_blank" onclick="ga('send', 'event', 'Link', 'click', 'aliyun-realtime-blog-bannerbar-mobile')">
                <img src="https://img2020.cnblogs.com/blog/35695/202105/35695-20210509221214222-438425324.png" alt="" />
            </a>
        </div>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/tcjiaan/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/tcjiaan/">老周</a>
</h1>
<h2>成于天性，行于自然。</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/tcjiaan/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E4%B8%9C%E9%82%AA%E7%8B%AC%E5%AD%A4">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/tcjiaan/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/tcjiaan/p/14395271.html">
    <span>【.NET 与树莓派】让喇叭播放音乐</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>如果你和老周一样，小时候特别喜欢搞破坏（什么电器都敢拆），那下面这样小喇叭你一定见过。</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210104057955-1808144245.jpg" width="400" loading="lazy"></p>
<p>这种喇叭其实以前很多录音机都用，包括上小学时买来做英语听力的便携录音机。嗯，就是放录音带的那种，录音带也叫磁带或卡带，有两个轮子，录音机的动力转轴会带动轮子转动，然后就能听到声音了。</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210104719074-384668758.png" width="700" loading="lazy"></p>
<p>&nbsp;</p>
<p>小时候，放学从学校走回家，途中就能看到不少于十处卖录音带的，有文具店的，有蹲路边卖的，甚至连一些卖早餐的店也卖。至于是否正版，这个你懂的。反正 1.5 元到 2 元一盒，零花钱省点用的话，一个星期能买到两三盒，然后回到家里又可以嗨了。也不用担心被长辈们发现，因为他们也喜欢听，被发现了他们会和你一起分享。</p>
<p>玩具用的喇叭会稍微比这个小一点，有正圆形的，也有椭圆形的；老周曾经在一个电子琴里拆出有正方形的喇叭，以老周幼年的拆机经验，方形是极罕见的，正圆形居多。</p>
<p>网上购买，一般会买到有焊接杜邦线的，以及无焊接线的。</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210105506922-9749661.jpg" width="400" loading="lazy"></p>
<p>有焊接杜邦线的就爽了，直接上线；至于无线的，如果你焊接技术好的话，也可以自己焊，如果没电烙铁没焊锡丝也不要紧，可以用带杜邦头的鳄鱼夹，直接夹住接线孔就行了。毕竟两边的线离得比较远，两个鳄鱼夹不会碰到一起，就不必担心短路了。</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210105851391-722192984.jpg" width="300" loading="lazy"></p>
<p>&nbsp;</p>
<p>除了上面介绍的喇叭，还有一种模块也能播放音乐，那就是蜂鸣器。</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210110446883-1469339565.jpg" width="600" loading="lazy"></p>
<p>注意蜂鸣分为无源和有源，上图中，左边的是无源蜂鸣器，右边的是有源蜂鸣器。</p>
<p>有源蜂鸣器，只要电平信号就能发声，而且只能产生固定音高的声音，所以，想让它播放音乐是没门的。从图中你会看到，有源蜂鸣器上那块黑色的圆柱体（像牛粪的那个）上贴着纸签，如果不撕掉，发出的声音刺耳但音量很小；如果把纸签撕掉，音量变大但没那么刺耳。我们这个让喇叭播放音乐的实验必须使用无源蜂鸣器，所以买的时候要看清楚是有源的还是无源的。</p>
<p>&nbsp;</p>
<p>好了，上面介绍的是完成实验的器件，至于是选小喇叭还是蜂鸣器，你看着办，因为两者原理一样——我们物理课上学过，音高是由频率决定的。</p>
<p>上一篇烂文中，老周扯了 PWM 调光的实验，由于 PWM 能以不同的频率输出电平信号，所以设置不同的频率，再发送PWM方波，就能让喇叭发出不同音高的声音了。喇叭不能直接上电源，那样是不能放音乐的，只能听见地雷爆炸的声音。再次强调一下，<strong><em>是改变 PWM 的频率，不是占空比，改变占空比只能控制声音强度</em></strong>。</p>
<p>&nbsp;</p>
<p>下面开始实验，此次实验老周选了一首很简单的歌，大家都听过的，《世上只有妈妈好》。简谱如下：</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210115623668-2119675695.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>速度是每分钟 80 拍，所以每一拍（四分音符）的时长为 60/80 = 750 毫秒。接下来咱们确定一下曲中各音符的时值。</p>
<p>1、带附点的四分音符，时值为 750 + 750/2 = 1125 ms。附点就是延长当前音符时值的一半，所以四分音符加附点就是加上半拍的时值。</p>
<p>2、四分音符：750ms。</p>
<p>3、八分音符：750 / 2 = 375ms。</p>
<p>4、二分音符，后面有一横线的，就是两拍，750 * 2= 1500 ms。</p>
<p>至于每个音符的频率，可以直接网上查。</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210114411010-1467678098.png" width="500" loading="lazy"></p>
<p>&nbsp;</p>
<p>此处老周选用国际标准 A（中音 La）的频率（440 Hz）作为中音音域的参考点，于是得到各音阶的频率。</p>
<table style="width: 600px; display: block" border="0" align="left">
<tbody>
<tr>
<td>&nbsp;</td>
<td>音阶</td>
<td>频率</td>
<td>最终取值</td>
</tr>
<tr>
<td rowspan="3">低音部分</td>
<td>低音 5</td>
<td>195.998</td>
<td>196 Hz</td>
</tr>
<tr>
<td>低音 6</td>
<td>220.0</td>
<td>220 Hz</td>
</tr>
<tr>
<td>低音 7</td>
<td>246.942</td>
<td>247 Hz</td>
</tr>
<tr>
<td rowspan="7">中音部分</td>
<td>中音 1</td>
<td>261.626</td>
<td>262 Hz</td>
</tr>
<tr>
<td>中音 2</td>
<td>293.665</td>
<td>294 Hz</td>
</tr>
<tr>
<td>中音 3</td>
<td>329.628</td>
<td>330 Hz</td>
</tr>
<tr>
<td>中音 4</td>
<td>&nbsp;349.228</td>
<td>&nbsp;349 Hz</td>
</tr>
<tr>
<td>&nbsp;中音 5</td>
<td>&nbsp;391.995</td>
<td>&nbsp;392 Hz</td>
</tr>
<tr>
<td>&nbsp;中音 6</td>
<td>440.0</td>
<td>440 Hz&nbsp;</td>
</tr>
<tr>
<td>&nbsp;中音 7</td>
<td>&nbsp;493.883</td>
<td>&nbsp;494 Hz</td>
</tr>
<tr>
<td>&nbsp;高音部分</td>
<td>&nbsp;高音 1</td>
<td>&nbsp;523.251</td>
<td>&nbsp;523 Hz</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>封装一个类，名为&nbsp;NotePlayer，调用 PlayNote 方法播放指定频率的声音，持续 X 毫秒。</p>
<div class="cnblogs_code">
<pre>    <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> NotePlayer : IDisposable
    {
        </span><span style="color: rgba(0, 0, 255, 1)">private</span> PwmChannel _pwmch = <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">;

        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 构造函数</span>
        <span style="color: rgba(0, 0, 255, 1)">public</span> NotePlayer() =&gt; _pwmch = PwmChannel.Create(<span style="color: rgba(128, 0, 128, 1)">0</span>, <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">);

        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> Dispose()
        {
            _pwmch</span>?<span style="color: rgba(0, 0, 0, 1)">.Dispose();
        }

        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 播放指定频率的声音
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="freq"&gt;</span><span style="color: rgba(0, 128, 0, 1)">声音频率</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="duration"&gt;</span><span style="color: rgba(0, 128, 0, 1)">持续时间（毫秒）</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span> PlayNote(<span style="color: rgba(0, 0, 255, 1)">int</span> freq, <span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> duration)
        {
            _pwmch.Frequency </span>=<span style="color: rgba(0, 0, 0, 1)"> freq;
            _pwmch.Start();　</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 开始播放</span>
<span style="color: rgba(0, 0, 0, 1)">            DelayHelper.DelayMillis(duration);
            _pwmch.Stop();   </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 停止播放</span>
<span style="color: rgba(0, 0, 0, 1)">        }
    }</span></pre>
</div>
<p>核心部分是 PlayNote 方法，首先设置频率，然后调用 PwmChannel 的Start方法开始发送脉冲，随后持续一段时间（这段时间就是音符的时值，请看上文），播放完后，调用 Stop方法停止脉冲，喇叭不发声。</p>
<p>这里面有个辅助方法&nbsp;DelayMillis，用来暂停 X 毫秒，你完全可以用 Thread.Sleep 方法，这里老周写这个方法，用的是另一种思路——这是参考微软的写法。</p>
<div class="cnblogs_code">
<pre>    <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> DelayHelper
    {
        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span> DelayMillis(<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> ms)
        {
            </span><span style="color: rgba(0, 0, 255, 1)">long</span> ticks = ms * Stopwatch.Frequency / <span style="color: rgba(128, 0, 128, 1)">1000</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">long</span> targetTicks = Stopwatch.GetTimestamp() +<span style="color: rgba(0, 0, 0, 1)"> ticks;
            </span><span style="color: rgba(0, 0, 255, 1)">do</span><span style="color: rgba(0, 0, 0, 1)">
            {
                Thread.SpinWait(</span><span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">);
            }
            </span><span style="color: rgba(0, 0, 255, 1)">while</span> (Stopwatch.GetTimestamp() &lt;<span style="color: rgba(0, 0, 0, 1)"> targetTicks);
        }
    }</span></pre>
</div>
<p>原理是运用了 Stopwatch 类的计时器，GetTimestamp 方法总能返回计时器最新的 Tick，接着进入循环，每轮循环中调用&nbsp;Thread.SpinWait(1) 只等待一个代码周期，这个时间很短，微秒级别的。循环退出条件是&nbsp;GetTimestamp 方法返回的 Tick 达到我们预定好的时间。</p>
<p>这种方案适合对时间精度高的等待方案，比如等待几十微秒的。</p>
<p>&nbsp;</p>
<p>这里要思考一件事：我们如果把每首曲子的音符都写进代码中，如果要播放其他曲子就得改一大遍代码，很不灵活。当然像 Arduino 那样没有操作系统且内部存储空间很小的板子，要么把代码写死，要么加个外部的 SD 卡模块，把音符信息放SD卡上，然后在代码中读。对于树莓派来说，这事情好办得要命。树莓派带操作系统，而且自身有 micro SD 卡接口，读写文件相当方便。</p>
<p>因此，老周把《世上只有妈妈好》的音符频率和时值输入到一个文本文件中，要换曲子直接换个文件就完事。格式很简单，每行一个音符，包括频率和时值，用空格分开。于是，《世上只有妈妈好》的文件如下：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(128, 0, 128, 1)">440</span> <span style="color: rgba(128, 0, 128, 1)">1125</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">330</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">523</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">440</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">440</span> <span style="color: rgba(128, 0, 128, 1)">1500</span>
<span style="color: rgba(128, 0, 128, 1)">0</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">330</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">440</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">330</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">294</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">262</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">220</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">330</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">294</span> <span style="color: rgba(128, 0, 128, 1)">1500</span>
<span style="color: rgba(128, 0, 128, 1)">0</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">294</span> <span style="color: rgba(128, 0, 128, 1)">1125</span>
<span style="color: rgba(128, 0, 128, 1)">330</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">440</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">330</span> <span style="color: rgba(128, 0, 128, 1)">1125</span>
<span style="color: rgba(128, 0, 128, 1)">294</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">262</span> <span style="color: rgba(128, 0, 128, 1)">1500</span>
<span style="color: rgba(128, 0, 128, 1)">0</span> <span style="color: rgba(128, 0, 128, 1)">750</span>
<span style="color: rgba(128, 0, 128, 1)">392</span> <span style="color: rgba(128, 0, 128, 1)">1125</span>
<span style="color: rgba(128, 0, 128, 1)">330</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">294</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">262</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">220</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">262</span> <span style="color: rgba(128, 0, 128, 1)">375</span>
<span style="color: rgba(128, 0, 128, 1)">196</span> <span style="color: rgba(128, 0, 128, 1)">1500</span>
<span style="color: rgba(128, 0, 128, 1)">0</span> <span style="color: rgba(128, 0, 128, 1)">750</span></pre>
</div>
<p>其中，你会看到有几行，音符频率是 0，这个是为了让喇叭有停顿。</p>
<p>再写一个&nbsp;&nbsp;MusicPlayer 类，可以控制播放整首曲子，并可以指定循环次数。</p>
<div class="cnblogs_code">
<pre>    <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> MusicPlayer : IDisposable
    {
        </span><span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">bool</span> _playing = <span style="color: rgba(0, 0, 255, 1)">false</span>; <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 表示是否正在播放</span>
        NotePlayer _noteplayer = <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">;
        Stream _stream </span>= <span style="color: rgba(0, 0, 255, 1)">null</span>;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 文件流</span>

        <span style="color: rgba(0, 0, 255, 1)">#region</span> 构造函数
        <span style="color: rgba(0, 0, 255, 1)">public</span> MusicPlayer(<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)"> noteFilepath)
        {
            _noteplayer </span>= <span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> NotePlayer();
            _stream </span>=<span style="color: rgba(0, 0, 0, 1)"> File.OpenRead(noteFilepath);
        }
        </span><span style="color: rgba(0, 0, 255, 1)">#endregion</span>

        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 播放音乐
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;param name="count"&gt;</span><span style="color: rgba(0, 128, 0, 1)">重复次数，-1表示无限循环</span><span style="color: rgba(128, 128, 128, 1)">&lt;/param&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span> Start(<span style="color: rgba(0, 0, 255, 1)">int</span> count = <span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">)
        {
            _playing </span>= <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;

            </span><span style="color: rgba(0, 0, 255, 1)">if</span>(count == -<span style="color: rgba(128, 0, 128, 1)">1</span>)     <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 无限循环</span>
<span style="color: rgba(0, 0, 0, 1)">            {
                </span><span style="color: rgba(0, 0, 255, 1)">while</span><span style="color: rgba(0, 0, 0, 1)">(_playing)
                {
                    PlaySong();
                }
            }
            </span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)">
            {
                </span><span style="color: rgba(0, 0, 255, 1)">while</span> (_playing &amp;&amp; count &gt; <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)
                {
                    PlaySong();
                    count</span>--<span style="color: rgba(0, 0, 0, 1)">;
                }
            }
        }

        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 停止播放
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span> Stop() =&gt; _playing = <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;

        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> Dispose()
        {
            _stream</span>?<span style="color: rgba(0, 0, 0, 1)">.Close();
            _stream</span>?<span style="color: rgba(0, 0, 0, 1)">.Dispose();
            _noteplayer</span>?<span style="color: rgba(0, 0, 0, 1)">.Dispose();
        }

        </span><span style="color: rgba(0, 0, 255, 1)">#region</span> 私有方法
        <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> PlaySong()
        {
            </span><span style="color: rgba(0, 0, 255, 1)">string</span> line = <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">;
            _stream.Seek(</span><span style="color: rgba(128, 0, 128, 1)">0L</span><span style="color: rgba(0, 0, 0, 1)">, SeekOrigin.Begin);
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 这里一定要让 leaveOpen 参数为 true
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 不然 reader 关闭时会直接把文件给释放
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 后面就不能播放第二遍了</span>
            <span style="color: rgba(0, 0, 255, 1)">using</span> StreamReader _noteReader = <span style="color: rgba(0, 0, 255, 1)">new</span>(_stream, leaveOpen: <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">);
            line </span>=<span style="color: rgba(0, 0, 0, 1)"> _noteReader.ReadLine();
            </span><span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> freq, dura;
            </span><span style="color: rgba(0, 0, 255, 1)">while</span> (_playing &amp;&amp; (line <span style="color: rgba(0, 0, 255, 1)">is</span> not <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">))
            {
                </span><span style="color: rgba(0, 0, 255, 1)">string</span>[] _s = line.Split(<span style="color: rgba(128, 0, 0, 1)">'</span> <span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">);
                </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!<span style="color: rgba(0, 0, 255, 1)">int</span>.TryParse(_s[<span style="color: rgba(128, 0, 128, 1)">0</span>].Trim(), <span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> freq))
                {
                    </span><span style="color: rgba(0, 0, 255, 1)">continue</span><span style="color: rgba(0, 0, 0, 1)">;
                }
                </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!<span style="color: rgba(0, 0, 255, 1)">int</span>.TryParse(_s[<span style="color: rgba(128, 0, 128, 1)">1</span>].Trim(), <span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> dura))
                {
                    </span><span style="color: rgba(0, 0, 255, 1)">continue</span><span style="color: rgba(0, 0, 0, 1)">;
                }
                </span><span style="color: rgba(0, 0, 255, 1)">if</span> (freq &lt; <span style="color: rgba(128, 0, 128, 1)">0</span> || dura &lt; <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">)
                {
                    </span><span style="color: rgba(0, 0, 255, 1)">continue</span><span style="color: rgba(0, 0, 0, 1)">;
                }
                </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 播放音符</span>
<span style="color: rgba(0, 0, 0, 1)">                _noteplayer.PlayNote(freq, dura);
                </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 播放完读下一个音符</span>
                line =<span style="color: rgba(0, 0, 0, 1)"> _noteReader.ReadLine();
            }
        }
        </span><span style="color: rgba(0, 0, 255, 1)">#endregion</span><span style="color: rgba(0, 0, 0, 1)">
    }</span></pre>
</div>
<p>打开包含音符频率和时值的文件，一行一行地读。每读出一行，以空格作分隔符拆开字符串——可拆成两个元素的字符串数组。第一个元素为频率，第二个元素为时值，随后用前面封装的 PlayNote 播放。</p>
<p>注意实例化 StreamReader 时，一定要保证它被释放时不要关闭文件，不然打开文件后只能播放一次了，后续的重复播放就会报错。</p>
<p>&nbsp;</p>
<p>回到程序的 Main 方法。</p>
<div class="cnblogs_code">
<pre>    <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Program
    {
        </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 声明字段</span>
        <span style="color: rgba(0, 0, 255, 1)">static</span> MusicPlayer ply = <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">;

        </span><span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span> Main(<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">[] args)
        {
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 当按取消键时清理资源</span>
            Console.CancelKeyPress += (_,_) =&gt;<span style="color: rgba(0, 0, 0, 1)">
            {
                ply</span>?<span style="color: rgba(0, 0, 0, 1)">.Stop();
                ply</span>?<span style="color: rgba(0, 0, 0, 1)">.Dispose();
            };

            ply </span>= <span style="color: rgba(0, 0, 255, 1)">new</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">./test01.txt</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 尝试通过命令行参数获取播放次数</span>
            <span style="color: rgba(0, 0, 255, 1)">int</span> count = -<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span>(args <span style="color: rgba(0, 0, 255, 1)">is</span> { Length: &gt; <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">})
            {
                </span><span style="color: rgba(0, 0, 255, 1)">string</span> s = args[<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">];
                </span><span style="color: rgba(0, 0, 255, 1)">if</span>(!<span style="color: rgba(0, 0, 255, 1)">int</span>.TryParse(s,<span style="color: rgba(0, 0, 255, 1)">out</span><span style="color: rgba(0, 0, 0, 1)"> count))
                {
                    count </span>= -<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">;
                }
            }
            Console.WriteLine($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">播放{count}次……</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);
            ply.Start(count);

            ply.Dispose();
        }

    }</span></pre>
</div>
<p>这里还实现了通过命令行参数来设定循环播放次数，-1为单曲循环。</p>
<p>&nbsp;</p>
<p>最后是发布，上传到树莓派。</p>
<p>下面看怎么接线。</p>
<p>一、如果用小喇叭，注意正负极。如下图，左边是负极（接线孔右侧有“-”），右边是正极（接线孔左侧有“+”）。负极接树莓派的 GND（有多个，随便挑一个），正极<span style="text-decoration: underline"><strong>串联一个大于 100 Ω 的电阻</strong></span>（电阻一定要接，不然会有破音，而且时间长了会烧掉喇叭，阻值 100 - 200 均可，电阻大了声音小一点）后接 GPIO 18，这个你看过上一篇文章就知道了，4B 只有这个引脚能产生第一路 PWM，其他树莓派你可以自己试。</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210123429657-2009003068.jpg" width="600" loading="lazy"></p>
<p>&nbsp;</p>
<p>二、使用无源蜂鸣器。这个得看你买的模块是什么样子的，老周买的这个是三个引脚的。</p>
<p><img src="https://img2020.cnblogs.com/blog/367389/202102/367389-20210210123853434-1771895893.png" width="250" loading="lazy"></p>
<p>&nbsp;</p>
<p><span style="color: rgba(0, 51, 102, 1)">&nbsp;VCC 接树莓派供电脚，3.3V 和 5V 均可，都兼容，放心烧不了，上面有100欧的电阻。</span></p>
<p><span style="color: rgba(0, 51, 102, 1)">GND 接树莓派 GND。</span></p>
<p><span style="color: rgba(0, 51, 102, 1)">IO 接树莓派的 GPIO 18。</span></p>
<p>&nbsp;</p>
<p>执行程序，就可以欣赏音乐了。</p>
<p>示例源代码，请<a href="https://files.cnblogs.com/files/tcjiaan/playMusic.zip" target="_blank">点击这里</a></p>
<p>可以试听一下效果</p>
<p><audio width="300" height="32" src="https://files.cnblogs.com/files/tcjiaan/abc.rar" controls="controls"></audio></p>
<p>=====================================================================</p>
<p>补充一下，开发板只能产生方波，不能产生正弦（含余弦）波，更不能产生叠加的交流声波。所以，它只能依据频率来产生不同的音高，你不能控制其音色，更别指望变成自制 Midi。树莓派主板上是有 3.5 mm 音频接口的，要看电影要听歌，跟电脑一样，插个耳机或有源音箱（如低音炮）即可。也可以去买一块专门的功放模块（针对像 Arduino 那样没有音频接口的板子），不用写代码驱动，插上音响就能嗨。当然也有蓝牙功放模块，网购无极限，啥都有可能买到。所以这年头想DIY还是比较容易的。</p>
<p>下一篇烂文，老周会说一下用 PWM 来驱动舵机，以及调节风扇的转速。</p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-02-10 12:54</span>&nbsp;
<a href="https://www.cnblogs.com/tcjiaan/">东邪独孤</a>&nbsp;
阅读(<span id="post_view_count">1816</span>)&nbsp;
评论(<span id="post_comment_count">5</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14395271" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14395271);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 113198, cb_blogApp = 'tcjiaan', cb_blogUserGuid = '9874e16f-6837-e111-b988-842b2b196315';
    var cb_entryId = 14395271, cb_entryCreatedDate = '2021-02-10 12:54', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 东邪独孤
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjtXCUSOVQr4JjlUhhw2kmK77OKsygzHhzon87sCz8izVqojEd8NB_Jf2BHFCF6_5wFRpahKZdUtHjieJqnqREkahC4yJRHPW_URXZy9KtzzsA2qklWSgonHqGMaVw0gC_w" />
</body>
</html>
