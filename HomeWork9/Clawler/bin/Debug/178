<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">博客园_讷言敏行</title>
  <subtitle type="text"></subtitle>
  <id>uuid:fd2d64d1-d987-4bd5-a811-eca46a09a2d3;id=326</id>
  <updated>2021-05-11T12:39:04Z</updated>
  <author>
    <name>讷言敏行~</name>
    <uri>http://www.cnblogs.com/yj0405/</uri>
  </author>
  <generator>feed.cnblogs.com</generator>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14757245.html</id>
    <title type="text">MySQL - 触发器（TRIGGER) - 讷言敏行~</title>
    <summary type="text">一.触发器基本概念 触发器是与表有关的数据库对象，在满足特定的条件触发，并执行触发器中定义的语句集。 说白了，触发器就像一个牛皮糖，依附于某个表上，当表的行记录有增/删/改的操作时，可以触发触发器内提前写好的语句集的执行。 注意，查询时没有触发器的操作。 创建触发器的四大要素 监视谁：table 监</summary>
    <published>2021-05-11T12:39:00Z</published>
    <updated>2021-05-11T12:39:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14757245.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14757245.html" />
    <content type="html">【摘要】一.触发器基本概念 触发器是与表有关的数据库对象，在满足特定的条件触发，并执行触发器中定义的语句集。 说白了，触发器就像一个牛皮糖，依附于某个表上，当表的行记录有增/删/改的操作时，可以触发触发器内提前写好的语句集的执行。 注意，查询时没有触发器的操作。 创建触发器的四大要素 监视谁：table 监 &lt;a href="http://www.cnblogs.com/yj0405/p/14757245.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14757041.html</id>
    <title type="text">MySQL - 视图(VIEW) - 讷言敏行~</title>
    <summary type="text">about 视图的定义 视图是虚拟表，是从数据库中一个或多个表中导出来的表，其内容由查询定义；同真实表(基表)一样，视图包含一系列带有名称的字段和记录，在使用视图时动态生成。视图的数据变化会影响到基表，基表的数据变化也会影响到视图(insert、update、delete)。 另外，创建视图需要有c</summary>
    <published>2021-05-11T11:39:00Z</published>
    <updated>2021-05-11T11:39:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14757041.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14757041.html" />
    <content type="html">【摘要】about 视图的定义 视图是虚拟表，是从数据库中一个或多个表中导出来的表，其内容由查询定义；同真实表(基表)一样，视图包含一系列带有名称的字段和记录，在使用视图时动态生成。视图的数据变化会影响到基表，基表的数据变化也会影响到视图(insert、update、delete)。 另外，创建视图需要有c &lt;a href="http://www.cnblogs.com/yj0405/p/14757041.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14752593.html</id>
    <title type="text">复制表 - 讷言敏行~</title>
    <summary type="text">1 .复制一份一摸一样的表 -- 创建一个a2表，表结构跟a1一样，这里复制的a2表跟a1的表结构是一样的，但不会复制a1表中的记录 CREATE TABLE a2 LIKE a1; 2.创建一个表，复制另一张表的指定字段和记录。 -- 注意，自己创建的表字段一定要跟被复制表字段一致 CREATE </summary>
    <published>2021-05-10T12:01:00Z</published>
    <updated>2021-05-10T12:01:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14752593.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14752593.html" />
    <content type="html">【摘要】1 .复制一份一摸一样的表 -- 创建一个a2表，表结构跟a1一样，这里复制的a2表跟a1的表结构是一样的，但不会复制a1表中的记录 CREATE TABLE a2 LIKE a1; 2.创建一个表，复制另一张表的指定字段和记录。 -- 注意，自己创建的表字段一定要跟被复制表字段一致 CREATE  &lt;a href="http://www.cnblogs.com/yj0405/p/14752593.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14752531.html</id>
    <title type="text">MySQL - 其他操作 - 讷言敏行~</title>
    <summary type="text">一、关于prompt参数 当我们登录到MySQL后，MySQL只是简单的提示mysql&gt;，没有其他的信息，对我们来说，意义不大，那么通过prompt参数就可以来自定义显式一些重要的信息，比如：登录的用户名、主机地址、当前所在的数据库等信息。那么如何使用prompt参数呢？有两种方式： 登录MySQL</summary>
    <published>2021-05-10T11:41:00Z</published>
    <updated>2021-05-10T11:41:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14752531.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14752531.html" />
    <content type="html">【摘要】一、关于prompt参数 当我们登录到MySQL后，MySQL只是简单的提示mysql&gt;，没有其他的信息，对我们来说，意义不大，那么通过prompt参数就可以来自定义显式一些重要的信息，比如：登录的用户名、主机地址、当前所在的数据库等信息。那么如何使用prompt参数呢？有两种方式： 登录MySQL &lt;a href="http://www.cnblogs.com/yj0405/p/14752531.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14752218.html</id>
    <title type="text">MySQL - 单机中的单实例和多实例 - 讷言敏行~</title>
    <summary type="text">一、about centos7.3 + mysql5.7.20 MySQL多实例的本质在一台机器上开启多个不同的MySQL实例，也就是各实例监听不同的端口，提供不同的服务。多个实例公用一套MySQL安装程序，启动程序和配置文件可以是一个也可以是多个(推荐多个)；各自的数据文件隔离；逻辑上各实例彼此隔</summary>
    <published>2021-05-10T11:14:00Z</published>
    <updated>2021-05-10T11:14:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14752218.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14752218.html" />
    <content type="html">【摘要】一、about centos7.3 + mysql5.7.20 MySQL多实例的本质在一台机器上开启多个不同的MySQL实例，也就是各实例监听不同的端口，提供不同的服务。多个实例公用一套MySQL安装程序，启动程序和配置文件可以是一个也可以是多个(推荐多个)；各自的数据文件隔离；逻辑上各实例彼此隔 &lt;a href="http://www.cnblogs.com/yj0405/p/14752218.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14752004.html</id>
    <title type="text">MySQL - 连接管理 - 讷言敏行~</title>
    <summary type="text">一、连接参数 文中已经说过，MySQL支持socket和TCP/IP两种连接方式。 [root@cs mysql]# mysql -uroot -p -S /tmp/mysql.sock Enter password: -S指定socket来连接；一般我们不加-S就可以登录到MySQL中，是因为My</summary>
    <published>2021-05-10T09:52:00Z</published>
    <updated>2021-05-10T09:52:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14752004.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14752004.html" />
    <content type="html">【摘要】一、连接参数 文中已经说过，MySQL支持socket和TCP/IP两种连接方式。 [root@cs mysql]# mysql -uroot -p -S /tmp/mysql.sock Enter password: -S指定socket来连接；一般我们不加-S就可以登录到MySQL中，是因为My &lt;a href="http://www.cnblogs.com/yj0405/p/14752004.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14751954.html</id>
    <title type="text">MYSQL-用户管理 - 讷言敏行~</title>
    <summary type="text">一、用户名@白名单 MySQL支持用户名@白名单的方式连接，有以下几种方式： 链接方式描述备注 wordpress@'10.0.0.%' 只允许10网段连接 常用 wordpress@'%' 所有地址 wordpress@'10.0.0.200' 只允许某一个地址链接 wordpress@'loca</summary>
    <published>2021-05-10T09:29:00Z</published>
    <updated>2021-05-10T09:29:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14751954.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14751954.html" />
    <content type="html">【摘要】一、用户名@白名单 MySQL支持用户名@白名单的方式连接，有以下几种方式： 链接方式描述备注 wordpress@'10.0.0.%' 只允许10网段连接 常用 wordpress@'%' 所有地址 wordpress@'10.0.0.200' 只允许某一个地址链接 wordpress@'loca &lt;a href="http://www.cnblogs.com/yj0405/p/14751954.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14751831.html</id>
    <title type="text">MySQL基本概念 - 讷言敏行~</title>
    <summary type="text">一、连接 MySQL提供了两种连接方式： 1.1 TCP/IP方式(本地、远程) mysql -uroot -p123 -h 10.0.0.1 -P330 1.2 Socket方式(仅本地) mysql -uroot -p123 -S /tmp/mysql.sock 当我们本地连接MySQL的时候，</summary>
    <published>2021-05-10T09:06:00Z</published>
    <updated>2021-05-10T09:06:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14751831.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14751831.html" />
    <content type="html">【摘要】一、连接 MySQL提供了两种连接方式： 1.1 TCP/IP方式(本地、远程) mysql -uroot -p123 -h 10.0.0.1 -P330 1.2 Socket方式(仅本地) mysql -uroot -p123 -S /tmp/mysql.sock 当我们本地连接MySQL的时候， &lt;a href="http://www.cnblogs.com/yj0405/p/14751831.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14751632.html</id>
    <title type="text">主要博客连接 - 讷言敏行~</title>
    <summary type="text">爬虫算法： https://www.cnblogs.com/bobo-zhang/ 视频：https://www.bilibili.com/video/BV1Dg4y1B7FV elk和数据库： https://www.cnblogs.com/Neeo/p/10864123.html django：</summary>
    <published>2021-05-10T08:31:00Z</published>
    <updated>2021-05-10T08:31:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14751632.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14751632.html" />
    <content type="html">【摘要】爬虫算法： https://www.cnblogs.com/bobo-zhang/ 视频：https://www.bilibili.com/video/BV1Dg4y1B7FV elk和数据库： https://www.cnblogs.com/Neeo/p/10864123.html django： &lt;a href="http://www.cnblogs.com/yj0405/p/14751632.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
  <entry>
    <id>http://www.cnblogs.com/yj0405/p/14748699.html</id>
    <title type="text">django分页 - 讷言敏行~</title>
    <summary type="text">一、Django的内置分页器（paginator） 1.1 内置方法和属性 from django.core.paginator import Paginator Paginator对象： paginator = Paginator(user_list, 10) # per_page: 每页显示条目</summary>
    <published>2021-05-09T12:08:00Z</published>
    <updated>2021-05-09T12:08:00Z</updated>
    <author>
      <name>讷言敏行~</name>
      <uri>http://www.cnblogs.com/yj0405/</uri>
    </author>
    <link rel="alternate" href="http://www.cnblogs.com/yj0405/p/14748699.html" />
    <link rel="alternate" type="text/html" href="http://www.cnblogs.com/yj0405/p/14748699.html" />
    <content type="html">【摘要】一、Django的内置分页器（paginator） 1.1 内置方法和属性 from django.core.paginator import Paginator Paginator对象： paginator = Paginator(user_list, 10) # per_page: 每页显示条目 &lt;a href="http://www.cnblogs.com/yj0405/p/14748699.html" target="_blank"&gt;阅读全文&lt;/a&gt;</content>
  </entry>
</feed>