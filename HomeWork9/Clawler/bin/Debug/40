<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="never" />
    <meta name="description" content="1 安全技术和防火墙 1 安全技术和防火墙 入侵检测系统(Intrusion Detection Systems):特点是不阻断任何网络访问，量化、定位来自内 外网络的威胁情况，主要以提供报警和事后监" />
    <meta property="og:description" content="1 安全技术和防火墙 1 安全技术和防火墙 入侵检测系统(Intrusion Detection Systems):特点是不阻断任何网络访问，量化、定位来自内 外网络的威胁情况，主要以提供报警和事后监" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>8张图带你了解iptables的前世今生 - 临江仙我亦是行人 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/simplememory/bundle-simplememory.min.css?v=uknaX_hejnSu-njQgx4Hj1R0JiPLwUhFPUlwWNmWyB4" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/wysxr/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/wysxr/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/wysxr/wlwmanifest.xml" />
    <script>
        var currentBlogId = 674521;
        var currentBlogApp = 'wysxr';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleMemory';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2021-05-11 07:41';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile formobile">
            <a href="https://developer.aliyun.com/learning/trainingcamp/realtime/1?utm_content=g_1000268661" target="_blank" onclick="ga('send', 'event', 'Link', 'click', 'aliyun-realtime-blog-bannerbar-mobile')">
                <img src="https://img2020.cnblogs.com/blog/35695/202105/35695-20210509221214222-438425324.png" alt="" />
            </a>
        </div>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/wysxr/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/wysxr/">临江仙我亦是行人</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/wysxr/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E4%B8%B4%E6%B1%9F%E4%BB%99%E6%88%91%E4%BA%A6%E6%98%AF%E8%A1%8C%E4%BA%BA">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/wysxr/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wysxr/p/14757044.html">
    <span>8张图带你了解iptables的前世今生</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<h1 id="1-安全技术和防火墙">1 安全技术和防火墙</h1>
<h2 id="1-安全技术和防火墙-1">1 安全技术和防火墙</h2>
<ul>
<li>
<p>入侵检测系统(Intrusion Detection Systems):特点是不阻断任何网络访问，量化、定位来自内 外网络的威胁情况，主要以提供报警和事后监督为主，提供有针对性的指导措施和安全决策依据,类 似于监控系统一般采用旁路部署方式</p>
</li>
<li>
<p>入侵防御系统(Intrusion Prevention System):以透明模式工作，分析数据包的内容如:溢出攻 击、拒绝服务攻击、木马、蠕虫、系统漏洞等进行准确的分析判断，在判定为攻击行为后立即予以 阻断，主动而有效的保护网络的安全，一般采用在线部署方式</p>
</li>
<li>
<p>防火墙( FireWall ):隔离功能，工作在网络或主机边缘，对进出网络或主机的数据包基于一定的 规则检查，并在匹配某规则时由规则定义的行为进行处理的一组功能的组件，基本上的实现都是默 认情况下关闭所有的通过型访问，只开放允许访问的策略,会将希望外网访问的主机放在DMZ (demilitarized zone)网络中.</p>
</li>
</ul>
<pre><code class="language-http">防水墙 
广泛意义上的防水墙:防水墙(Waterwall)，与防火墙相对，是一种防止内部信息泄漏的安全产品。网络、外设接口、存储介质和打印机构成信息泄漏的全部途径。
防水墙针对这四种泄密途径，在事前、事中、事后进行全面防护。其与防病毒产品、外部安全产品一起构成完整的网络安全体系。
</code></pre>
<p><img src="https://img-blog.csdnimg.cn/img_convert/2c72b4dfda2f9d84739bc7a1b759e5ee.png" alt="" loading="lazy"></p>
<h2 id="12-防火墙的分类">1.2 防火墙的分类</h2>
<p>按保护范围划分:</p>
<ul>
<li>
<p>主机防火墙:服务范围为当前一台主机</p>
</li>
<li>
<p>网络防火墙:服务范围为防火墙一侧的局域网</p>
</li>
</ul>
<p>按实现方式划分:</p>
<ul>
<li>
<p>硬件防火墙:在专用硬件级别实现部分功能的防火墙;另一个部分功能基于软件实现，如:华为， 山石hillstone,天融信，启明星辰，绿盟，深信服, PaloAlto , fortinet, Cisco, Checkpoint， NetScreen(Juniper2004年40亿美元收购)等</p>
</li>
<li>
<p>软件防火墙:运行于通用硬件平台之上的防火墙的应用软件，Windows 防火墙 ISA --&gt; Forefront TMG</p>
</li>
</ul>
<p>按网络协议划分:</p>
<ul>
<li>
<p>网络层防火墙:OSI模型下四层，又称为包过滤防火墙</p>
</li>
<li>
<p>应用层防火墙/代理服务器:proxy 代理网关，OSI模型七层</p>
</li>
</ul>
<p><strong>包过滤防火墙</strong></p>
<p>网络层对数据包进行选择，选择的依据是系统内设置的过滤逻辑，被称为访问控制列表(ACL)，通过 检查数据流中每个数据的源地址，目的地址，所用端口号和协议状态等因素，或他们的组合来确定是否 允许该数据包通过</p>
<p>优点:对用户来说透明，处理速度快且易于维护</p>
<p>缺点:无法检查应用层数据，如病毒等</p>
<p><strong>应用层防火墙</strong><br>
应用层防火墙/代理服务型防火墙，也称为代理服务器(Proxy Server) 将所有跨越防火墙的网络通信链路分为两段 内外网用户的访问都是通过代理服务器上的“链接”来实现</p>
<p>优点:在应用层对数据进行检查，比较安全</p>
<p>缺点:增加防火墙的负载</p>
<p>提示:现实生产环境中所使用的防火墙一般都是二者结合体，即先检查网络数据，通过之后再送到应用<br>
层去检查</p>
<h1 id="2-linux-防火墙的基本认识">2 Linux 防火墙的基本认识</h1>
<h2 id="21-netfilter">2.1 Netfilter</h2>
<p><img src="https://img-blog.csdnimg.cn/img_convert/b5ae72eae3f231302db819250b5523d3.png" alt="" loading="lazy"></p>
<p>Linux防火墙是由Netfilter组件提供的，Netfilter工作在内核空间，集成在linux内核中</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/4702519a02f4359a9a1911a2c6a323fb.png" alt="" loading="lazy"></p>
<p>Netfilter 是Linux 2.4.x之后新一代的Linux防火墙机制，是linux内核的一个子系统。Netfilter采用模块 化设计，具有良好的可扩充性，提供扩展各种网络服务的结构化底层框架。Netfilter与IP协议栈是无缝 契合，并允许对数据报进行过滤、地址转换、处理等操作</p>
<p>Netfilter官网文档:<code>https://netfilter.org/documentation/</code></p>
<pre><code>[root@centos8 ~]#grep -m 10 NETFILTER /boot/config-4.18.0-240.15.1.el8_3.x86_64
CONFIG_NETFILTER=y
CONFIG_NETFILTER_ADVANCED=y
CONFIG_BRIDGE_NETFILTER=m
CONFIG_NETFILTER_INGRESS=y
CONFIG_NETFILTER_NETLINK=m
CONFIG_NETFILTER_FAMILY_BRIDGE=y
CONFIG_NETFILTER_FAMILY_ARP=y
# CONFIG_NETFILTER_NETLINK_ACCT is not set
CONFIG_NETFILTER_NETLINK_QUEUE=m
CONFIG_NETFILTER_NETLINK_LOG=m
[root@centos8 ~]#


root@ubuntu20:~# grep -m 10 NETFILTER /boot/config-5.8.0-50-generic
CONFIG_NETFILTER=y
CONFIG_NETFILTER_ADVANCED=y
CONFIG_BRIDGE_NETFILTER=m
CONFIG_NETFILTER_INGRESS=y
CONFIG_NETFILTER_NETLINK=m
CONFIG_NETFILTER_FAMILY_BRIDGE=y
CONFIG_NETFILTER_FAMILY_ARP=y
CONFIG_NETFILTER_NETLINK_ACCT=m
CONFIG_NETFILTER_NETLINK_QUEUE=m
CONFIG_NETFILTER_NETLINK_LOG=m
root@ubuntu20:~#

[root@centos7 ~]# grep -m 10 NETFILTER /boot/config-3.10.0-1160.el7.x86_64
CONFIG_NETFILTER=y
# CONFIG_NETFILTER_DEBUG is not set
CONFIG_NETFILTER_ADVANCED=y
CONFIG_BRIDGE_NETFILTER=m
CONFIG_NETFILTER_NETLINK=m
CONFIG_NETFILTER_NETLINK_ACCT=m
CONFIG_NETFILTER_NETLINK_QUEUE=m
CONFIG_NETFILTER_NETLINK_LOG=m
CONFIG_NETFILTER_NETLINK_QUEUE_CT=y
CONFIG_NETFILTER_SYNPROXY=m
[root@centos7 ~]#
</code></pre>
<h2 id="22-防火墙工具介绍">2.2 防火墙工具介绍</h2>
<h3 id="221-iptables">2.2.1 iptables</h3>
<p>由软件包iptables提供的命令行工具，工作在用户空间，用来编写规则，写好的规则被送往netfilter，告 诉内核如何去处理信息包</p>
<pre><code>[root@centos8 ~]#yum -y install iptables
[root@centos8 ~]#rpm -qi iptables
Name        : iptables
Version     : 1.8.4
Release     : 15.el8_3.3
Architecture: x86_64
Install Date: Tue 11 May 2021 09:32:18 AM CST
Group       : Unspecified
Size        : 1992105
License     : GPLv2 and Artistic 2.0 and ISC
Signature   : RSA/SHA256, Fri 18 Dec 2020 09:02:38 AM CST, Key ID 05b555b38483c65d
Source RPM  : iptables-1.8.4-15.el8_3.3.src.rpm
Build Date  : Fri 18 Dec 2020 07:27:23 AM CST
Build Host  : x86-02.mbox.centos.org
Relocations : (not relocatable)
Packager    : CentOS Buildsys &lt;bugs@centos.org&gt;
Vendor      : CentOS
URL         : http://www.netfilter.org/projects/iptables
Summary     : Tools for managing Linux kernel packet filtering capabilities
Description :
The iptables utility controls the network packet filtering code in the
Linux kernel. If you need to set up firewalls and/or IP masquerading,
you should either install nftables or this package.

Note: This package contains the nftables-based variants of iptables and
ip6tables, which are drop-in replacements of the legacy tools.
[root@centos8 ~]#

[root@centos8 ~]#iptables --version
iptables v1.8.4 (nf_tables)
[root@centos8 ~]#ll /usr/sbin/iptables
lrwxrwxrwx 1 root root 17 Dec 18 07:27 /usr/sbin/iptables -&gt; xtables-nft-multi*
[root@centos8 ~]#


root@ubuntu20:~# iptables --version
iptables v1.8.5 (nf_tables)
root@ubuntu20:~# ll /usr/sbin/iptables
lrwxrwxrwx 1 root root 26  4月 30 16:25 /usr/sbin/iptables -&gt; /etc/alternatives/iptables*
root@ubuntu20:~#

[root@centos7 ~]# yum -y install iptables
[root@centos7 ~]# iptables --version
iptables v1.4.21
[root@centos7 ~]# ll /usr/sbin/iptables
lrwxrwxrwx. 1 root root 13 3月  25 10:18 /usr/sbin/iptables -&gt; xtables-multi
[root@centos7 ~]#
</code></pre>
<p>示例：安装 iptables 的 service 包</p>
<pre><code>[root@centos8 ~]#dnf -y install iptables-services
[root@centos8 ~]#rpm -ql iptables-services
/etc/sysconfig/ip6tables
/etc/sysconfig/iptables
/usr/lib/systemd/system/ip6tables.service
/usr/lib/systemd/system/iptables.service
/usr/libexec/initscripts/legacy-actions/ip6tables
/usr/libexec/initscripts/legacy-actions/ip6tables/panic
/usr/libexec/initscripts/legacy-actions/ip6tables/save
/usr/libexec/initscripts/legacy-actions/iptables
/usr/libexec/initscripts/legacy-actions/iptables/panic
/usr/libexec/initscripts/legacy-actions/iptables/save
/usr/libexec/iptables
/usr/libexec/iptables/ip6tables.init
/usr/libexec/iptables/iptables.init
[root@centos8 ~]#
</code></pre>
<h3 id="222-firewalld">2.2.2 firewalld</h3>
<p>从CentOS 7 版开始引入了新的前端管理工具</p>
<p><strong>软件包</strong></p>
<ul>
<li>
<p>firewalld</p>
</li>
<li>
<p>firewalld-config</p>
</li>
</ul>
<p><strong>管理工具</strong></p>
<ul>
<li>
<p>firewall-cmd 命令行工具</p>
</li>
<li>
<p>firewall-config 图形工作</p>
</li>
</ul>
<h3 id="223-nftables">2.2.3 nftables</h3>
<p>此软件是CentOS 8 新特性,Nftables最初在法国巴黎的Netfilter Workshop 2008上发表，然后由长期的 netfilter核心团队成员和项目负责人Patrick McHardy于2009年3月发布。它在2013年末合并到Linux内 核中，自2014年以来已在内核3.13中可用。</p>
<p>它重用了netfilter框架的许多部分，例如连接跟踪和NAT功能。它还保留了命名法和基本iptables设计的 几个部分，例如表，链和规则。就像iptables一样，表充当链的容器，并且链包含单独的规则，这些规 则可以执行操作，例如丢弃数据包，移至下一个规则或跳至新链。</p>
<p>从用户的角度来看，nftables添加了一个名为nft的新工具，该工具替代了iptables，arptables和 ebtables中的所有其他工具。从体系结构的角度来看，它还替换了内核中处理数据包过滤规则集运行时 评估的那些部分。</p>
<p>查看 nftables 软件包</p>
<pre><code>[root@centos8 ~]#rpm -qi nftables
Name        : nftables
Epoch       : 1
Version     : 0.9.3
Release     : 16.el8
Architecture: x86_64
Install Date: Sat 08 May 2021 02:51:22 PM CST
Group       : Unspecified
Size        : 811386
License     : GPLv2
Signature   : RSA/SHA256, Wed 12 Aug 2020 05:05:16 AM CST, Key ID 05b555b38483c65d
Source RPM  : nftables-0.9.3-16.el8.src.rpm
Build Date  : Wed 12 Aug 2020 04:59:03 AM CST
Build Host  : x86-02.mbox.centos.org
Relocations : (not relocatable)
Packager    : CentOS Buildsys &lt;bugs@centos.org&gt;
Vendor      : CentOS
URL         : http://netfilter.org/projects/nftables/
Summary     : Netfilter Tables userspace utillites
Description :
Netfilter Tables userspace utilities.
[root@centos8 ~]#
</code></pre>
<p>CentOS 8 支持三种防火墙服务</p>
<pre><code>[root@centos8 ~]#systemctl status iptables.service
● iptables.service - IPv4 firewall with iptables
   Loaded: loaded (/usr/lib/systemd/system/iptables.service; disabled; vendor preset: disabled)
   Active: inactive (dead)
[root@centos8 ~]#systemctl status firewalld.service
● firewalld.service - firewalld - dynamic firewall daemon
   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)
   Active: inactive (dead)
     Docs: man:firewalld(1)
[root@centos8 ~]#systemctl status nftables.service
● nftables.service - Netfilter Tables
   Loaded: loaded (/usr/lib/systemd/system/nftables.service; disabled; vendor preset: disabled)
   Active: inactive (dead)
     Docs: man:nft(8)
[root@centos8 ~]#
</code></pre>
<h2 id="23-netfilter-中五个勾子函数和报文流向">2.3 netfilter 中五个勾子函数和报文流向</h2>
<p>Netfilter在内核中选取五个位置放了五个hook(勾子) function(INPUT、OUTPUT、FORWARD、 PREROUTING、POSTROUTING)，而这五个hook function向用户开放，用户可以通过一个命令工具 (iptables)向其写入规则 由信息过滤表(table)组成，包含控制IP包处理的规则集(rules)，规则被分组放在链(chain)上</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/33b1a419d18f4552d133122a8c309092.png" alt="" loading="lazy"></p>
<p>提示:从 Linux kernel 4.2 版以后，Netfilter 在prerouting 前加了一个 ingress 勾子函数。可以使用这 个新的入口挂钩来过滤来自第2层的流量，这个新挂钩比预路由要早，基本上是 tc 命令(流量控制工 具)的替代品</p>
<p><strong>三种报文流向</strong></p>
<ul>
<li>
<p>流入本机:PREROUTING --&gt; INPUT--&gt;用户空间进程</p>
</li>
<li>
<p>流出本机:用户空间进程 --&gt;OUTPUT--&gt; POSTROUTING</p>
</li>
<li>
<p>转发:PREROUTING --&gt; FORWARD --&gt; POSTROUTING</p>
</li>
</ul>
<h2 id="24-iptables的组成">2.4 iptables的组成</h2>
<p>iptables由五个表table和五个链chain以及一些规则组成</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/b321eccfc2c132236490ce4224f6e624.png" alt="" loading="lazy"></p>
<p><strong>链（chain）</strong></p>
<ul>
<li>
<p>内置链:每个内置链对应于一个钩子函数</p>
</li>
<li>
<p>自定义链:用于对内置链进行扩展或补充，可实现更灵活的规则组织管理机制;只有 Hook 钩子调用自定义链时，才生效</p>
</li>
</ul>
<p><strong>五个内置链chain</strong></p>
<ul>
<li>
<p>INPUT</p>
</li>
<li>
<p>OUTPUT</p>
</li>
<li>
<p>FORWARD</p>
</li>
<li>
<p>PREROUTING</p>
</li>
<li>
<p>POSTROUTING</p>
</li>
</ul>
<p><strong>五个表table</strong></p>
<ul>
<li>
<p>filter:过滤规则表，根据预定义的规则过滤符合条件的数据包,默认表</p>
</li>
<li>
<p>nat:network address translation 地址转换规则表</p>
</li>
<li>
<p>mangle:修改数据标记位规则表</p>
</li>
<li>
<p>raw:关闭启用的连接跟踪机制，加快封包穿越防火墙速度</p>
</li>
<li>
<p>security:用于强制访问控制(MAC)网络规则，由Linux安全模块(如SELinux)实现</p>
</li>
</ul>
<p>优先级由高到低的顺序为</p>
<pre><code>security --&gt;raw--&gt;mangle--&gt;nat--&gt;filter
</code></pre>
<p><strong>表和链对应关系</strong></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/ce7f9ce7481a15f798cbd5b4ad01b855.png" alt="" loading="lazy"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/08004e6cb5778d011821e6494d5bd6ab.png" alt="" loading="lazy"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/de10af62ef05546811c79a64762c3024.png" alt="" loading="lazy"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/5de1672b0e4302e27827627f5072ffdd.png" alt="" loading="lazy"></p>
<p><strong>内核中数据包的传输过程</strong></p>
<ul>
<li>
<p>当一个数据包进入网卡时，数据包首先进入PREROUTING链，内核根据数据包目的IP判断是否需要转送出去</p>
</li>
<li>
<p>如果数据包是进入本机的，数据包就会沿着图向下移动，到达INPUT链。数据包到达INPUT链后， 任何进程都会收到它。本机上运行的程序可以发送数据包，这些数据包经过OUTPUT链，然后到达 POSTROUTING链输出</p>
</li>
<li>
<p>如果数据包是要转发出去的，且内核允许转发，数据包就会向右移动，经过FORWARD链，然后到 达POSTROUTING链输出</p>
</li>
</ul>
<p>查看 iptables 表</p>
<pre><code>[root@centos8 ~]#iptables -vnL -t filter
[root@centos8 ~]#iptables -vnL -t nat
[root@centos8 ~]#iptables -vnL -t mangle
[root@centos8 ~]#iptables -vnL -t raw
[root@centos8 ~]#iptables -vnL -t security

# CentOS 6 nat表不支持INPUT链
[root@centos6 ~]#iptables -vnL -t nat
</code></pre>
<h1 id="3-iptables">3 iptables</h1>
<h2 id="31-iptables-规则说明">3.1 iptables 规则说明</h2>
<h3 id="311-iptables-规则组成">3.1.1 iptables 规则组成</h3>
<p>规则rule:根据规则的匹配条件尝试匹配报文，对匹配成功的报文根据规则定义的处理动作作出处理，<br>
规则在链接上的次序即为其检查时的生效次序</p>
<p>匹配条件:默认为与条件，同时满足</p>
<p>基本匹配:IP，端口，TCP的Flags(SYN,ACK等)</p>
<p>扩展匹配:通过复杂高级功能匹配</p>
<p>处理动作:称为target，跳转目标</p>
<ul>
<li>
<p>内建处理动作:ACCEPT,DROP,REJECT,SNAT,DNAT,MASQUERADE,MARK,LOG...</p>
</li>
<li>
<p>自定义处理动作:自定义chain，利用分类管理复杂情形</p>
</li>
</ul>
<p>规则要添加在链上，才生效;添加在自定义链上不会自动生效</p>
<p><mark>白名单:只有指定的特定主机可以访问,其它全拒绝（生产环境建议）</mark></p>
<pre><code># 白名单，没有被明确允许的都拒绝

iptables -A INPUT -s 10.0.0.10 -j ACCETP                # 允许本机（windows）机器

iptables -A INPUT -i lo -j ACCEPT                      # 允许本地回环地址

iptables -A INPUT -j REJECT                             # 默认全部拒绝

iptables -I INPUT 2 -s 10.0.0.12 -p icmp -j REJECT      # 拒绝 10.0.0.12 ping 本机
</code></pre>
<p>黑名单:只有指定的特定主机拒绝访问,其它全允许,默认方式</p>
<h3 id="312-iptables规则添加时考量点">3.1.2 iptables规则添加时考量点</h3>
<ul>
<li>
<p>要实现哪种功能:判断添加在哪张表上</p>
</li>
<li>
<p>报文流经的路径:判断添加在哪个链上</p>
</li>
<li>
<p>报文的流向:判断源和目的</p>
</li>
<li>
<p>匹配规则:业务需要</p>
</li>
</ul>
<h3 id="313-环境准备">3.1.3 环境准备</h3>
<p>为了防止 iptables 和 firewalld 出现冲突，我们可以关闭 firewalld</p>
<p>CentOS7+</p>
<pre><code>systemctl stop firewalld.service
systemctl disable  firewalld. service
# 或者
systemctl disable --now firewalld. service
</code></pre>
<p>CentOS6</p>
<pre><code>service iptables stop
chkconfig iptables off
</code></pre>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2021-05-11 19:41</span>&nbsp;
<a href="https://www.cnblogs.com/wysxr/">临江仙我亦是行人</a>&nbsp;
阅读(<span id="post_view_count">21</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14757044" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(14757044);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 674521, cb_blogApp = 'wysxr', cb_blogUserGuid = '08a3ad58-0589-4a44-b5c4-08d8d71b5727';
    var cb_entryId = 14757044, cb_entryCreatedDate = '2021-05-11 19:41', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 临江仙我亦是行人
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjtQe0o9qqK0-drSsMc-rs2jnWH1QIyLxujA9Lv9hXUoqqIkbGXUZBwwkvrJLOH-IoxwKzAdQIwsBzN8HfD4Vl8KLldjImqdS5Rp_72dJbK73pkwBSWHA32BLAByIE-V_4U" />
</body>
</html>
