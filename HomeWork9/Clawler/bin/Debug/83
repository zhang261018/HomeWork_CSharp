<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    <meta name="description" content="写在前面 Swift 3.0 正式版发布了差不多快一个月了，断断续续的把手上和 Swift 相关的迁移到了Swift 3.0。所以写点小总结。 Swift 3.0 正式版发布了差不多快一个月了，断断续" />
    <meta property="og:description" content="写在前面 Swift 3.0 正式版发布了差不多快一个月了，断断续续的把手上和 Swift 相关的迁移到了Swift 3.0。所以写点小总结。 Swift 3.0 正式版发布了差不多快一个月了，断断续" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Swift 3 新特性和迁移详解 - 肖品 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/xiaopin/custom.css?v=HyOHRCNMalpv47REK2JE&#x2B;XrmJ9Y=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/xiaopin/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/xiaopin/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/xiaopin/wlwmanifest.xml" />
    <script>
        var currentBlogId = 65882;
        var currentBlogApp = 'xiaopin';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleMemory';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2016-10-14 01:21';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile formobile">
            <a href="https://developer.aliyun.com/learning/trainingcamp/realtime/1?utm_content=g_1000268661" target="_blank" onclick="ga('send', 'event', 'Link', 'click', 'aliyun-realtime-blog-bannerbar-mobile')">
                <img src="https://img2020.cnblogs.com/blog/35695/202105/35695-20210509221214222-438425324.png" alt="" />
            </a>
        </div>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <style type="text/css">
    .Abstract
    {
        padding: 15px;
        border: dotted 2px #999;
        color: #999;
        font-family: 'Microsoft Yahei';
        border-radius: 4px;
    }
        
    .First
    {
        margin: 10px 0;
        font-family: 'Microsoft Yahei';
        text-align: left;
        padding: 6px 20px;
        color: #fff;
        background: #55895B;
        font-size: 20px;
        border-radius: 4px;
        clear: both;
    }
        
        
    .Second
    {
        margin: 10px 0;
        font-family: 'Microsoft Yahei';
        padding: 6px 20px;
        background: #93C8A2;
        color: #fff;
        font-size: 18px;
        border-radius: 4px;
        clear: both;
    }
        
        
    .Third
    {
        margin: 10px 0;
        padding: 6px 20px;
        font-family: 'Microsoft Yahei';
        margin: 15px 0;
        font-size: 16px;
        color: fff;
        background: #C6EFD2;
        color: #999;
        border-radius: 4px;
        clear: both;
    }
    .note
    {
        margin: 10px 0;
        padding: 15px 20px 15px 60px;
        background: #FCFAA9 url('http://images.cnblogs.com/cnblogs_com/libaoheng/305804/o_yellow-pin.png') no-repeat 20px 0;
        font-size: 15px;
        font-family: 'Microsoft Yahei';
        box-shadow: 0 0 8px #aaa;
        clear: both;
    }
        
    .demo
    {
        text-align: left;
        padding: 6px 20px;
        overflow: auto;
        border-radius: 4px;
        background: orange;
        color: #fff;
        font-size: 16px;
        clear: both;
    }
        
    .cnblogs_Highlighter
    {
        border: solid 1px #ccc;
        clear: both;
    }
        
    .cnblogs_code
    {
        background: #EFFFF4;
        border: solid 0px #939393;
        font-size: 14px;
        clear: both;
        padding: 10px 20px;
    }
    .cnblogs_code pre
    {
        font-size: 14px;
    }
    .cnblogs_code span
    {
        font-family: Courier New;
        font-size: 14px;
    }
</style>
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/xiaopin/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/xiaopin/">专注iOS、Anroid、Java、Golang、项目架构和管理</a>
</h1>
<h2>学习是一种信仰，进步是一种幸福！</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/xiaopin/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E8%82%96%E5%93%81">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/xiaopin/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiaopin/p/5960041.html">
    <span>Swift 3 新特性和迁移详解</span>
    



</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<h1>写在前面</h1>
<ul class=" list-paddingleft-2">
<li>
<p>Swift 3.0 正式版发布了差不多快一个月了，断断续续的把手上和 Swift 相关的迁移到了Swift 3.0。所以写点小总结。</p>
</li>
</ul>
<h2>背景</h2>
<h4>代码量（4万行）</h4>
<ul class=" list-paddingleft-2">
<li>
<p>首先，我是今年年初才开始入手 Swift 的。加上 Swift 的 ABI 和 API 一直不稳定，所以没有在项目中大范围的使用，所以这次迁移的代码量不多，大概在<strong>4万行</strong>左右。</p>
</li>
</ul>
<h4>迁移时间（一天左右）</h4>
<ul class=" list-paddingleft-2">
<li>
<p>迁移时间上的话，大概是花了1天左右。两个<strong>混编</strong>项目，一个&nbsp;<strong>Swift 为主</strong>的项目。期中&nbsp;<strong>Swift 为主</strong>的项目 花了大概<strong>大半天</strong>时间，两个<strong>混编</strong>代码量差不多，但是一个花了<strong>小半天</strong>，还有一个差不多只花了<strong>半个小时</strong>(原因先留个悬念~)。</p>
</li>
</ul>
<h2>准备</h2>
<blockquote>
<p>在开发最初开发选择 Swift 的时候的很多决策也让我这次少了很多工作量。</p>
</blockquote>
<h4>界面用 xib 而不用纯代码</h4>
<ul class=" list-paddingleft-2">
<li>
<p>阴差阳错的，和 Swift 相关的大部分界面都是用xib 画的。而这个 xib 在这次迁移中得到了很大的优势，xib 和 SB 的代码不适配 Swift 3。想当初要是使用代码写的 UI 的话，这次迁移改动估计会多很多吧。</p>
</li>
</ul>
<h4>关于第三方库的选择：</h4>
<ul class=" list-paddingleft-2">
<li>
<p>对于一个项目来说，三方库似乎成了一道<strong>必选菜</strong>，但是如何去选择这道菜呢？</p>
</li>
<li>
<p>对于三方库，当初的选择是，<strong>能用 OC 就尽量用 OC</strong>。 毕竟可以OC 可以无缝衔接到 Swift，而且还相对稳定。</p>
</li>
<li>
<p>在选择&nbsp;<strong>Swift</strong>&nbsp;相关的三方库时，我尽量值选择使用者比较多的库，例如<strong>Alamofire</strong>、<strong>Snap</strong>、<strong>Kingfisher</strong>、<strong>Fabric</strong>等，因为使用者比较多，开发者会更愿意去维护，而不至于跳票。所以不会存在现在许多小伙伴面临的问题，想迁移，但是有些库没有更新。至少对于我来说，当我想迁移的时候，所有和 Swift 相关的三方库都已经迁移到了 3.0 了。</p>
</li>
</ul>
<blockquote>
<p>得益于上面两点，在迁移过程中少了不少工作量。????</p>
</blockquote>
<h4>知识储备升级</h4>
<ul class=" list-paddingleft-2">
<li>
<p>先了解了一下Swift 2 到 Swift 3 的变动，及变动的原因。（看完心中一万头草泥马飞过，但是其实是越来越好了）</p>
<ul class=" list-paddingleft-2">
<li>
<p><a href="https://swift.org/" target="_blank">Swift官博</a></p>
</li>
<li>
<p><a href="https://github.com/apple/swift-evolution/blob/master/releases/swift-3_0.md" target="_blank">swift-evolution</a></p>
</li>
<li>
<p><a href="https://realm.io/cn/news/appbuilders-daniel-steinberg-whats-new-swift-3/" target="_blank">Swift 3 新特性一览</a></p>
</li>
</ul>
</li>
<li>
<p>然后把语法文档快速的重温了一遍。</p>
<ul class=" list-paddingleft-2">
<li>
<p><a href="https://developer.apple.com/swift/" target="_blank">Swift Programming Language</a></p>
</li>
<li>
<p><a href="http://wiki.jikexueyuan.com/project/swift/" target="_blank">中文版</a></p>
</li>
</ul>
</li>
</ul>
<h2>迁移中的问题</h2>
<h4>Any &amp;&amp; AnyObject</h4>
<ul class=" list-paddingleft-2">
<li>
<p>我想在做迁移和做完迁移的同学改的最多的一个就是 &nbsp;<code>as AnyObjct?</code>&nbsp;吧?</p>
</li>
<li>
<p>至少对于我来说是的。</p>
</li>
<li>
<p>和这个相关的基本是<strong>集合类型</strong>。在 Swift 2 中我们一个用&nbsp;<strong>[AnyObject]</strong>&nbsp;来存放任何变量，甚至于存放struct类型的<code>String</code>、<code>Array</code>&nbsp;等。但是按道理 Swift 的&nbsp;<strong>AnyObject</strong>&nbsp;指的是类，而&nbsp;<strong>Any</strong>&nbsp;才是包括<code>struct</code>、<code>class</code>、<code>func</code>&nbsp;等所有类型。但是为何&nbsp;<strong>Struct</strong>&nbsp;可以放入&nbsp;<strong>[AnyObject]</strong>&nbsp;呢？在 &nbsp;<strong>Swift 2</strong>&nbsp;的时候会针对<strong>String</strong>、<strong>Int</strong>&nbsp;等&nbsp;<strong>Struct</strong>&nbsp;进行一个 Implicit Bridging Conversions。而到了&nbsp;<strong>Swift 3</strong>&nbsp;则进行了一个<a href="https://github.com/apple/swift-evolution/blob/master/proposals/0072-eliminate-implicit-bridging-conversions.md" target="_blank">**Fully eliminate implicit bridging conversions from Swift</a>**改动。</p>
</li>
<li>
<p>当然在我的项目中<strong>[AnyObject]</strong>其实是小事，最麻烦的就是 [String:AnyObject]。因为当初写项目的时候，还是处于&nbsp;<strong>OC To Swift</strong>&nbsp;的阶段所以对于 Dictionary ，基本采用了 [String:AnyObject], 所以在修改的时候，在很多地方为了这个修改。</p>
<ul class=" list-paddingleft-2">
<li>
<p>起初，我是照着 Xcode 的提示，在 Dictionary 后面的 value 后面加了一个&nbsp;<code>as AnyObjct？</code></p>
</li>
<li>
<p>后来渐渐的发现我做了一件很傻比的事情，其实我只要把 [String:AnyObject] 改为 [String:Any] 就可以了。????</p>
</li>
</ul>
</li>
<li>
<p>这也就是为什么在第一混编的项目中我花了那么多时间去修改代码了！得益于混编的第二个项目学习了 Yep 的思路，是把&nbsp;<code>[String:AnyObject]</code>&nbsp;命名为一个叫做&nbsp;<code>JSONDictionary</code>&nbsp;的类型。所以在&nbsp;<strong>Any &amp;&amp; AnyObect</strong>&nbsp;这个事情上，就花了一点点时间。</p>
</li>
</ul>
<pre class="hljs markdown">//&nbsp;Swift&nbsp;2
&nbsp;var&nbsp;json&nbsp;=&nbsp;[String:AnyObect]()
json["key1"]&nbsp;=&nbsp;1&nbsp;
json["key2"]&nbsp;=&nbsp;"2"&nbsp;

//&nbsp;to&nbsp;Swift&nbsp;3&nbsp;Step&nbsp;1
&nbsp;var&nbsp;json&nbsp;=&nbsp;[String:AnyObect]()
json["key1"]&nbsp;=&nbsp;1&nbsp;as&nbsp;AnyObject?
json["key2"]&nbsp;=&nbsp;"2"&nbsp;as&nbsp;AnyObject?

//&nbsp;to&nbsp;Swift&nbsp;3&nbsp;Step&nbsp;2
&nbsp;var&nbsp;json&nbsp;=&nbsp;[String:Any]()
json["key1"]&nbsp;=&nbsp;1&nbsp;
json["key2"]&nbsp;=&nbsp;"2"

//&nbsp;Swift&nbsp;2&nbsp;
public&nbsp;typealias&nbsp;JSONDictionary&nbsp;=&nbsp;[String:&nbsp;AnyObject]
//&nbsp;To&nbsp;Swift&nbsp;3&nbsp;Step&nbsp;2
public&nbsp;typealias&nbsp;JSONDictionary&nbsp;=&nbsp;[String:&nbsp;Any]</pre>
<h4>Alamofire 等三方库支持 iOS8</h4>
<ul class=" list-paddingleft-2">
<li>
<p>虽然说我使用的三方库都在第一时间将库升级到了&nbsp;<strong>Swift 3</strong>&nbsp;，但是期中&nbsp;<strong>Alamofire</strong>&nbsp;和&nbsp;<strong>Snap</strong>&nbsp;两个库最低适配只支持到了 iOS 9，为了避免和产品撕逼，不得不想办法解决这个适配问题。下面以&nbsp;<strong>Alamofire</strong>&nbsp;&nbsp;为例</p>
</li>
<li>
<p>其实三方库么，不一定只用 Cocoapods 的。所以打算下载代码然后直接撸源码。</p>
</li>
<li>
<p>先<strong>Alamofire</strong>的 Xcode 修改为最低适配 8.0，然后编译查找不通过的函数，并删除。（其实这些函数都是 iOS 9 新加的函数，所以删除不影响什么。）</p>
</li>
<li>
<p>大概花了 半个小时左右就可以删完了，然后直接拖到项目中就可以了~</p>
</li>
<li>
<p><strong>Snap</strong>&nbsp;其实只要拖进去就好了，暂时不需要修改什么。</p>
</li>
</ul>
<pre class="hljs swift">//&nbsp;其实都是&nbsp;!os(watchOS)&nbsp;这个宏下面的
#if&nbsp;!os(watchOS)

@discardableResult
public&nbsp;func&nbsp;stream(withHostName&nbsp;hostName:&nbsp;String,&nbsp;port:&nbsp;Int)&nbsp;-&gt;&nbsp;StreamRequest&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;SessionManager.default.stream(withHostName:&nbsp;hostName,&nbsp;port:&nbsp;port)
}

@discardableResult
public&nbsp;func&nbsp;stream(with&nbsp;netService:&nbsp;NetService)&nbsp;-&gt;&nbsp;StreamRequest&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;SessionManager.default.stream(with:&nbsp;netService)
}

#endif</pre>
<h4>@escaping</h4>
<ul class=" list-paddingleft-2">
<li>
<p>这个是我在适配中最蛋疼的坑</p>
</li>
<li>
<p>首先在看<a href="https://github.com/apple/swift-evolution/blob/master/releases/swift-3_0.md" target="_blank">swift-evolution</a>只是了解到<strong>@escaping</strong>&nbsp;必须显示声明。但是不知道<strong>@escaping</strong>的闭包，在函数体内无法再修改。</p>
</li>
</ul>
<pre class="hljs swift">let&nbsp;pedonmeter:CMPedometer&nbsp;=&nbsp;CMPedometer()

&nbsp;&nbsp;&nbsp;&nbsp;func&nbsp;getPedometerDataFromDate(_&nbsp;datet:Date?,&nbsp;withHandler&nbsp;handler:&nbsp;@escaping&nbsp;(CMPedometerData?,&nbsp;Error?)&nbsp;-&gt;&nbsp;()){


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;编译错误
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pedonmeter.queryPedometerDataFromDate(startTime,&nbsp;toDate:endTime,&nbsp;withHandler:&nbsp;{&nbsp;(pedometerData:CMPedometerData?,&nbsp;error:NSError?)&nbsp;-&gt;&nbsp;Void&nbsp;in

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;guard&nbsp;let&nbsp;pedometerData&nbsp;=&nbsp;pedometerData&nbsp;else&nbsp;{&nbsp;return&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler(pedometerData,&nbsp;error)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;做一些事情

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;最后逼不得已只能不修改了，函数外面就做一些事情了
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pedonmeter.queryPedometerData(from:&nbsp;startTime,&nbsp;to:&nbsp;endTime,&nbsp;withHandler:&nbsp;&nbsp;handler&nbsp;as!&nbsp;CMPedometerHandler)

&nbsp;&nbsp;&nbsp;&nbsp;}</pre>
<h4>Result of call to 'funtion' is unused</h4>
<ul class=" list-paddingleft-2">
<li>
<p>这其实不是一个 编译错误，但是这个警告最开始让我有点懵逼.返回值不用难道要我都修改一下？</p>
</li>
<li>
<p>最开始其实我是这么修改的&nbsp;<code>let _ = funtion()</code>,但是后面在看<a href="https://github.com/apple/swift-evolution/blob/master/proposals/0047-nonvoid-warn.md" target="_blank">SE-0047</a>的时候发现<code>@discardableResult</code>也是可以达到这个效果的。</p>
</li>
</ul>
<h4>Date &amp;&amp; NSDate</h4>
<ul class=" list-paddingleft-2">
<li>
<p>因为有个项目中使用的&nbsp;<strong>DateTools</strong>&nbsp;这个工具。它有一个&nbsp;<strong>NSDate + Tools</strong>&nbsp;的分类。</p>
</li>
<li>
<p>但是在写 Swift 3 的过程中我发现如果变量是 Date 类型的无法使用<strong>NSDate + Tools</strong>&nbsp;这个类型，必须显示声明<strong>date as NSDate</strong>&nbsp;这样才能调用分类的一些个方法。</p>
</li>
<li>
<p>这个让使用 OC 的库的时候会感觉十分不舒服，毕竟很多 NS 的前缀去掉了。所有都显示声明太不友好了。</p>
</li>
</ul>
<h4>CAAnimationDelegate</h4>
<ul class=" list-paddingleft-2">
<li>
<p>这个其实好像是 Xcode 8 的修改。因为之前CAAnimationDelegate 是一个分类。大概声明如下：</p>
</li>
</ul>
<pre class="hljs objectivec">@interface&nbsp;NSObject&nbsp;(CAAnimationDelegate)-&nbsp;(void)animationDidStart:(CAAnimation&nbsp;*)anim;
-&nbsp;
-&nbsp;(void)animationDidStop:(CAAnimation&nbsp;*)anim&nbsp;finished:(BOOL)flag;@end</pre>
<ul class=" list-paddingleft-2">
<li>
<p>之前是在 vc 中只要重写一下&nbsp;<code>animationDidStart</code>&nbsp;函数就可以了。但是新的不行，起初以为是 Swift 3 的变化，但是其实是 Xcode 8 中的修改。将 CAAnimationDelegate 变成了一个协议。我感觉这个修改是为了适配 &nbsp; Swift 3 ？变化如下：</p>
</li>
</ul>
<pre class="hljs objectivec">@protocol&nbsp;CAAnimationDelegate&nbsp;@optional-&nbsp;(void)animationDidStart:(CAAnimation&nbsp;*)anim;
-&nbsp;
-&nbsp;(void)animationDidStop:(CAAnimation&nbsp;*)anim&nbsp;finished:(BOOL)flag;@end</pre>
<blockquote>
<p>因为宽度时间比较长，其他的暂时想不到了。未完待续吧...</p>
</blockquote>
<h2>其他</h2>
<ul class=" list-paddingleft-2">
<li>
<p>还有许多微妙的变化让你似乎看不懂这个语言了，所以建议在适配之前看一下下面的文章。</p>
<ul class=" list-paddingleft-2">
<li>
<p><a href="https://realm.io/cn/news/appbuilders-daniel-steinberg-whats-new-swift-3/" target="_blank">Swift 3 新特性一览</a></p>
</li>
<li>
<p>[Swift 3.0 - Released on September 13, 2016]<a href="https://github.com/apple/swift-evolution/blob/master/releases/swift-3_0.md" target="_blank">https://github.com/apple/swift-evolution/blob/master/releases/swift-3_0.md</a></p>
</li>
<li>
<p>还有@卓同学 的&nbsp;<a href="http://www.jianshu.com/notebooks/6709594/latest" target="_blank">Swift 3 必看系列</a></p>
</li>
</ul>
</li>
<li>
<p>还有几个不错的总结</p>
<ul class=" list-paddingleft-2">
<li>
<p><a href="http://tech.glowing.com/cn/swift3/" target="_blank">Swift 3</a>&nbsp;by&nbsp;<a href="http://gupeng.me/" target="_blank">顾 鹏</a></p>
</li>
<li>
<p><a href="https://zhuanlan.zhihu.com/p/22584349" target="_blank">适配 Swift 3 的一点小经验和坑</a>&nbsp;by&nbsp;<a href="http://weibo.com/tualatrix" target="_blank">图拉鼎</a></p>
</li>
</ul>
</li>
</ul>
<h2>总结</h2>
<ul class=" list-paddingleft-2">
<li>
<p>总的说来这次迁移没有想象中的那么痛苦，虽然提案的改动很大，但是得益于 Xcode 8 的迁移工具，这次迁移花费时间不多，当然也有可能和我的代码量有关系~</p>
</li>
<li>
<p>在迁移完之后，再看代码，会发现 Swift 更加的优雅了，至少相比于 2 来说好了很多，至于好在哪里？你自己写写不就知道了咯。</p>
</li>
<li>
<p>最后，终于可以把 Xocde 7 卸载，再也不用担心两个一起开无脑闪退了！！！</p>
</li>
<li>
<p>最后对于明年的&nbsp;<strong>Swift 4</strong>&nbsp;只想说 快来吧~分分钟把你解决！</p>
</li>
<li>
<p>其实适配之路才刚刚开始，因为 Xcode 8 自动转的代码并没有很好的 Swift 3 化。目前只是说在 Swift 3 可以编译通过了而已~</p>
</li>
</ul>
<h2>更多</h2>
<p>工作之余，写了点笔记，如果需要可以在我的&nbsp;<a href="https://github.com/Damonvvong/iOSDevNotes" target="_blank">GitHub</a>&nbsp;看</p>
<p><br><br></p>
<div>文章转自&nbsp;<a href="http://www.jianshu.com/p/f4761952b8c2" target="_self">Damonwong的简书</a></div>
<div>&nbsp;</div>
<div>其他值得参考文献收藏：</div>
<div>官方：<a href="https://developer.apple.com/swift/" target="_blank">https://developer.apple.com/swift/</a></div>
<div><a href="http://blog.csdn.net/mo_xiao_mo/article/details/52692902" target="_blank">http://blog.csdn.net/mo_xiao_mo/article/details/52692902</a></div>
<div><a href="http://www.jianshu.com/p/ca8e05150068" target="_blank">http://www.jianshu.com/p/ca8e05150068</a></div>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2016-10-14 13:21</span>&nbsp;
<a href="https://www.cnblogs.com/xiaopin/">肖品</a>&nbsp;
阅读(<span id="post_view_count">1864</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=5960041" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(5960041);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 65882, cb_blogApp = 'xiaopin', cb_blogUserGuid = '1879a4b6-b8d4-de11-ba8f-001cf0cd104b';
    var cb_entryId = 5960041, cb_entryCreatedDate = '2016-10-14 13:21', cb_postType = 1;
    updatePostStats(
        [cb_entryId],
        function(id, count) { $("#post_view_count").text(count) },
        function(id, count) { $("#post_comment_count").text(count) })
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="cnblogs_c2" class="under-post-card">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 肖品
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjunOEBmA24wcJ4l9icEmeCsZukfX1qYh1xy-4I5jJDfm5SqNQE7pn4fC02bBdnnBKAkU3dBH9Z7Vjb1HmYBUSZuDqnd0Rc7MQ3SlSsqzQIsWrVGPAVI9D2juMItr8ijZQY" />
</body>
</html>
